all: index.js index.d.ts asn1-napi-rs.node

# Install "node_modules"
node_modules/.done: package.json package-lock.json
	rm -rf node_modules
	npm clean-install
	@touch node_modules/.done

node_modules: node_modules/.done
	@touch node_modules

# Build the local NAPI module
build/index.js: Cargo.toml Cargo.lock package.json package-lock.json tsconfig.json node_modules $(shell find src -type f) build.rs utils/helpers.ts
	rm -rf build __TMP__
	npm run napi -- build --platform --release __TMP__/build $(NAPI_LOCAL_BUILD_ARGS)
	npm run prettier -- __TMP__/build/index.* --write --loglevel error
	rm -rf build
	mv __TMP__/build .
	rmdir __TMP__

# Top-level index.js file
index.js: build/index.js
	rm -f index.js index.d.ts
	cp build/index.js build/index.d.ts .

# "index.d.ts" is generated by the rule that generates "index.js", but Make
# lacks a way to express this outcome
index.d.ts: index.js
	@true

asn1-napi-rs.node: build/index.js
	rm -f asn1-napi-rs.node
	cp build/asn1-napi-rs.*.node .
	ln -s $(shell echo build/asn1-napi-rs.*.node | sed 's@^build/@./@') asn1-napi-rs.node

# Run automated tests
test: node_modules index.js index.d.ts asn1-napi-rs.node
	cargo test
	npm run ava

# Run the automated tests, but do not rebuild the dependencies
# This is because the dependencies are already built during the CI process
# and we do not want to rebuild them just because they are technically out
# of date
do-test-no-dep-build: node_modules
	npm run ava

do-lint: node_modules
	npm run eslint -- -c ./.eslintrc.yml .
	rustfmt --check $(shell find src -type f)

# Run automated benchmarks
do-bench: node_modules index.js index.d.ts asn1-napi-rs.node
	node -r @swc-node/register benchmark/bench.ts

# Create an npm package
do-npm-publish: node_modules
	npm publish

# Remove generated files
clean:
	rm -rf target
	rm -rf __TMP__ build
	rm -f asn1-napi-rs*.node index.js index.d.ts

# Remove generated and downloaded files
distclean: clean
	rm -rf node_modules

.PHONY: all test do-test-no-dep-build do-lint do-bench do-npm-publish clean distclean
